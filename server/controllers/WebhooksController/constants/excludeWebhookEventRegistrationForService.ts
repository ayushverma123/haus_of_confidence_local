import { ThirdPartyService, ThirdPartyServiceMap } from "../../../model/ThirdPartyService";
import { WebhookExclusionsList } from "../model/WebhookExclusionsList";
import { WebhookType, WebhookTypeMap } from "../model/WebhookType";

//? Anything set to true in this will be excluded from webhook registration
export const excludeWebhookEventRegistrationForService: WebhookExclusionsList = {
    [ThirdPartyService.Boulevard]: {
        [WebhookType.ContactCreated]: false,
        [WebhookType.ContactDeleted]: true,
        [WebhookType.ContactMerged]: false,
        [WebhookType.ContactUpdated]: false,
        [WebhookType.OpportunityCreated]: true,
        [WebhookType.OpportunityDeleted]: true,
        [WebhookType.OpportunityStatusUpdate]: true,
        [WebhookType.OpportunityAssignedToUpdate]: true,
        [WebhookType.OpportunityMonetaryValueUpdate] : true,
        [WebhookType.OpportunityStageUpdate] : true,
        [WebhookType.AppointmentActive]: false,
        [WebhookType.AppointmentCancelled]: false,
        [WebhookType.AppointmentCompleted]: false,
        [WebhookType.AppointmentCreated]: false,
        [WebhookType.AppointmentRescheduled]: false,
        [WebhookType.AppointmentUpdated]: false,
        [WebhookType.AppointmentConfirmed]: false,
        [WebhookType.AppointmentArrived]: false,
        [WebhookType.MessageFailed]: true,
        [WebhookType.MessageSent]: true,
    },
    [ThirdPartyService.Podium]: {
        [WebhookType.ContactCreated]: false,
        [WebhookType.ContactDeleted]: false,
        [WebhookType.ContactMerged]: false,
        [WebhookType.ContactUpdated]: false,
        [WebhookType.OpportunityCreated]: true,
        [WebhookType.OpportunityDeleted]: true,
        [WebhookType.OpportunityStatusUpdate]: true,
        [WebhookType.OpportunityAssignedToUpdate]: true,
        [WebhookType.OpportunityMonetaryValueUpdate] : true,
        [WebhookType.OpportunityStageUpdate] : true,
        [WebhookType.AppointmentActive]: true,
        [WebhookType.AppointmentCancelled]: true,
        [WebhookType.AppointmentCompleted]: true,
        [WebhookType.AppointmentCreated]: true,
        [WebhookType.AppointmentRescheduled]: true,
        [WebhookType.AppointmentUpdated]: true,
        [WebhookType.AppointmentConfirmed]: true,
        [WebhookType.AppointmentArrived]: true,
        [WebhookType.MessageFailed]: false,
        [WebhookType.MessageSent]: false,
    },
    //? You can't register GoHighLevel webhooks via the API, developer must use the Web UI
    [ThirdPartyService.GoHighLevel]: {
        [WebhookType.ContactCreated]: true,
        [WebhookType.ContactDeleted]: true,
        [WebhookType.ContactMerged]: true,
        [WebhookType.ContactUpdated]: true,
        [WebhookType.OpportunityCreated]: true,
        [WebhookType.OpportunityDeleted]: true,
        [WebhookType.OpportunityStatusUpdate]: true,
        [WebhookType.OpportunityAssignedToUpdate]: true,
        [WebhookType.OpportunityMonetaryValueUpdate] : true,
        [WebhookType.OpportunityStageUpdate] : true,
        [WebhookType.AppointmentActive]: true,
        [WebhookType.AppointmentCancelled]: true,
        [WebhookType.AppointmentCompleted]: true,
        [WebhookType.AppointmentCreated]: true,
        [WebhookType.AppointmentRescheduled]: true,
        [WebhookType.AppointmentUpdated]: true,
        [WebhookType.AppointmentConfirmed]: true,
        [WebhookType.AppointmentArrived]: true,
        [WebhookType.MessageFailed]: true,
        [WebhookType.MessageSent]: true,
    }
}